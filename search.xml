<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[认识伪类、伪元素]]></title>
    <url>%2F2017-08-28-1%2F</url>
    <content type="text"><![CDATA[##常用伪类 连接伪类 ：link:向未访问的链接添加特殊的样式 :visited:设置访问过的页面链接的样式 动态伪类 :focus:指示当前拥有输入焦点的元素 :hover:当有鼠标悬停在其上的链接样式 :active:设置当你点击链接时的样式。 注意：伪类的顺序很重要，一般顺序：link-visited-focus-hover-active ##:target伪类 不是HTML的a标签里面那个target属性。target伪类是css3的新属性。官方定义是：URL 带有后面跟有锚名称#，指向文档内某个具体的元素。这个被链接的元素就是目标元素(target element)。:target 选择器可用于选取当前活动的目标元素。 有木有feel到target跟其他伪类的与众不同?!利用target的特性，可以实现纯css的tab效果切换。先根据target的特性锚链接到对应的div,再根据z-index的属性，改变div的层级关系，从而实现tab的切换效果！** 实例：123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;meta charset="UTF-8"&gt;&lt;style&gt;.tabmenu &#123; position:absolute; top:100%; margin:0;&#125;.tabmenu li&#123; display:inline-block;&#125;.tabmenu li a &#123; display:block; padding:5px 10px; margin:0 10px 0 0; border:1px solid #91a7b4; border-radius:0 0 5px 5px; background:#e3f1f8; color:#333; text-decoration:none;&#125;.tablist &#123; position:relative; margin:50px auto; min-height:200px;&#125;.tab_content &#123; position: absolute; width:600px; height:170px; padding:15px; border:1px solid #91a7b4; border-radius:3px; box-shadow:0 2px 3px rgba(0,0,0,0.1); font-size:1.2em; line-height:1.5em; color:#666; background:#fff; &#125; #tab1:target, #tab2:target, #tab3:target &#123; z-index: 1;&#125;&lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;div class="tablist"&gt; &lt;ul class="tabmenu"&gt; &lt;li&gt;&lt;a href="#tab1"&gt;tab1&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#tab2"&gt;tab2&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#tab3"&gt;tab3&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;div id="tab1" class="tab_content"&gt;tab1&lt;/div&gt; &lt;div id="tab2" class="tab_content"&gt;tab2tab2&lt;/div&gt; &lt;div id="tab3" class="tab_content"&gt;tab3tab3tab3&lt;/div&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 其他伪类：:first-child:可以选择元素的第一个子元素:not(selector)：否定伪类选择器用来在匹配元素时排除某些元素。123div:not(#container) &#123; color: blue; &#125; 在上面的例子中，设定除了id为container的div元素字体颜色为blue。 :nth-child(n):123li:nth-child(3) &#123; color: red; &#125; 这个伪类用于设定一个序列元素（比如li、tr）中的第n个元素（从1开始算起）的样式。在上面例子中，设定第三个列表元素li的字体颜色为红色。 看一个更灵活的用法，在下面例子中设定第偶数个元素的样式，可以用它来实现隔行换色：123tr:nth-child(2n) &#123; background-color: gray; &#125; 推荐：Mastering the :nth-child :nth-last-child(n)123li:nth-last-child(2) &#123; color: red; &#125; 与:nth-child(n)功能类似，不同的是它从一个序列的最后一个元素开始算起。上面例子中设定倒数第二个列表元素的字体颜色。 :nth-last-child(n)123li:nth-last-child(2) &#123; color: red; &#125; 与:nth-child(n)功能类似，不同的是它从一个序列的最后一个元素开始算起。上面例子中设定倒数第二个列表元素的字体颜色。 :nth-of-type(n)123ul:nth-of-type(3) &#123; border: 1px solid black; &#125; 与:nth-child(n)功能类似，不同的是它匹配的不是某个序列元素，而是元素类型。例如上面的代码设置页面中出现的第三个无序列表ul的边框。 :nth-last-of-type(n)1ul:nth-last-of-type(3) &#123; border: 1px solid black; &#125; 与:nth-of-type(n)功能类似，不同的是它从元素最后一次出现开始算起。上面例子中设定倒数第三个无序列表的边框 :lang：为不同的语言定义特殊的规则 伪类比属性选择器稍微健壮一些，在需要语言特定的样式时，可以选择伪类 注意：在IE8的之前版本必须声明&lt;!DOCTYPE&gt; , 才能生效。 ##伪元素１. :before和:after (向文档中插入生成内容) :before:用来给指定的元素的内容前面添加新的内容。 :after:用来给指定的元素的内容后边添加新的内容。 添加的新内容区域默认的display属性为:inline可以像修改其他元素一样修改它的样式。 content属性 属性content是否为必选？移除content试试。或者内容设置为空呢？ content属性的值还可以是其他形式，比如插入一张图片：注意不能使用引号。如果你将URL用引号括起来，那么它会变成一个字符串和插入文本“url(image.jpg)”作为其内容，插入的而不是图像本身。 content:url(img/icon.png);插入字符串插入属性值【attr】（如果一个属性不存在，会在相应位置插入一个空串）；生成引号、插入引号等。 如果要使用弯引号，quote规则要写作quote{quotes:&#39;\201C&#39; &#39;\201D&#39;}这里使用的十六进制的Unicode值。 ##伪元素通常配合伪类使用 eg：:before经常与:hover配合使用 :after特征与:before一致 伪元素:first-line：用于向文本的首行设置特殊样式。浏览器会根据 “first-line”伪元素中的样式对p元素的第一行文本进行格式化。 伪元素:first-letter ：用于向文本的首字母设置特殊样式 注意：first-letter伪元素只能用于块级元素。 ##伪类和伪元素的区别 w3c 对两者的定义： CSS 伪类用于向某些选择器添加特殊的效果。 CSS 伪元素用于将特殊的效果添加到某些选择器。 两者都与选择器相关，可以添加一些“特殊”的效果。 ##区别：用伪类 :first-child 和伪元素 :first-letter 来进行比较。12345p&gt;i:first-child &#123;color: red&#125;&lt;p&gt; &lt;i&gt;first&lt;/i&gt; &lt;i&gt;second&lt;/i&gt;&lt;/p&gt; 伪类 :first-child 添加样式到第一个子元素如果我们不使用伪类，而希望达到上述效果，可以这样做：12345.first-child &#123;color: red&#125;&lt;p&gt; &lt;i class=&quot;first-child&quot;&gt;first&lt;/i&gt; &lt;i&gt;second&lt;/i&gt;&lt;/p&gt; 我们给第一个子元素添加一个类，然后定义这个类的样式。 伪元素：12p:first-letter &#123;color: red&#125;&lt;p&gt;I am stephen lee.&lt;/p&gt; 伪元素 :first-letter 添加样式到第一个字母那么如果我们不使用伪元素，要达到上述效果，我们可以这样做：12.first-letter &#123;color: red&#125;&lt;p&gt;&lt;span&gt;I&lt;/span&gt; am stephen lee.&lt;/p&gt; 即给第一个字母添加一个 span，然后给 span 增加样式。 两者的区别已经出来了。那就是：伪类的效果可以通过添加一个实际的类来达到，而伪元素的效果则需要通过添加一个实际的元素才能达到，这也是为什么他们一个称为伪类，一个称为伪元素的原因。]]></content>
      <categories>
        <category>Notes</category>
      </categories>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用Hexo+Github免费搭建个人博客]]></title>
    <url>%2F2017-08-28%2F</url>
    <content type="text"><![CDATA[记录本次重新搭建个人博客 工具 Hexo GitHub 环境搭建 Nodejs安装 建议使用淘宝镜像 Git安装 开始搭建 Hexo文档有详细介绍，请仔细阅读安装hexo 打开终端输入npm install -g hexo-cli 检测是否成功安装输入hexo得到如下结果 初始化博客 依次执行如下命令 1234hexo init Blog // Blog可以换成任意名字，只是一个文件夹名字 cd Blog // 进入到Blog文件夹npm install hexo generate 初始化结束文件目录如下：目录结构说明 本地预览输入hexo server 然后打开浏览器输入http://localhost:4000即可预览博客 先阅读文档熟悉下hexo配置文件然后自己修改玩一玩，修改之前请备份 安装主题 选择一款自己喜欢的主题，这里有很多选择 下载主题 输入命令cd themes进入themes/文件夹下面 克隆主题到此目录下，我选择的next主题，文档比较详细之后的配置可以按照文档一步一步配置即可 克隆完成之后修改hexo配置文件: 12搜索并修改theme, 然后输入hexo s预览theme: hexo-theme-next 注意：安装主题之后我们要修改两个配置文件，一个是hexo配置文件【Blog目录下的config.yml文件】以下称hexo配置文件_，一个是主题配置文件【Blog/themes/相应主题/ 目录下的config.yml文件】以下称主题配置文件_ 部署到github 打开hexo配置文件找到deploy,我的配置如下 123456# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy: type: git repo: https://github.com/FerdYing/FerdYing.github.io.git // 换成你的仓库地址 branch: master 保存文件，继续在终端依次输入如下命令 12npm install hexo-deployer-git --savehexo deploy // 部署到github 第一次要求输入github用户名和密码，输入密码的时候是不显示的，输完回车继续 部署完毕~访问尝试一波吧~~ 博客个性化设置(可以跟着next文档把各种配置都玩一下) 我的hexo配置如下 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394959697# Hexo Configuration## Docs: https://hexo.io/docs/configuration.html## Source: https://github.com/hexojs/hexo/ # Sitetitle: FerdYing&apos;s Blogsubtitle: Stay hungry Stay foolishdescription: 学习总结 思考感悟 知识管理author: FerdYingemail: ferdying@163.comlanguage: zh-Hanstimezone:# URL## If your site is put in a subdirectory, set url as &apos;http://yoursite.com/child&apos; and root as &apos;/child/&apos;url: https://github.com/FerdYing/FerdYing.github.io.gitroot: /permalink: :year/:month/:day/:title/permalink_defaults:# Directorysource_dir: sourcepublic_dir: publictag_dir: tagsarchive_dir: archivescategory_dir: categoriescode_dir: downloads/codei18n_dir: :langskip_render:# Writingnew_post_name: :title.md # File name of new postsdefault_layout: posttitlecase: false # Transform title into titlecaseexternal_link: true # Open external links in new tabfilename_case: 0render_drafts: falsepost_asset_folder: falserelative_link: falsefuture: truehighlight: enable: true line_number: true auto_detect: false tab_replace:# Home page setting# path: Root path for your blogs index page. (default = &apos;&apos;)# per_page: Posts displayed per page. (0 = disable pagination)# order_by: Posts order. (Order by date descending by default)index_generator: path: &apos;&apos; per_page: 10 order_by: -date# Category &amp; Tagdefault_category: uncategorizedcategory_map:tag_map:# Date / Time format## Hexo uses Moment.js to parse and display date## You can customize the date format as defined in## http://momentjs.com/docs/#/displaying/format/date_format: YYYY-MM-DDtime_format: HH:mm:ss# Pagination## Set per_page to 0 to disable paginationper_page: 10pagination_dir: page# hexo sitemap网站地图sitemap: path: sitemap.xmlbaidusitemap: path: baidusitemap.xml# 搜索search: path: search.xml field: post format: html limit: 10000# Extensions## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/theme: hexo-theme-next# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy: type: git repo: https://github.com/FerdYing/FerdYing.github.io.git branch: master 主题配置 评论使用Disqus，按照文档设置之前需要去Disqus注册/登录获取shortname，然后再配置（需翻墙） 配置分类和标签页面输入hexo new pages “xxx”之后需要在编辑相应的文件夹下的index.md，按照文档设置type Hexo常用命令###hexo init [folder] 新建一个网站。如果没有设置 folder ，Hexo 默认在目前的文件夹建立网站。 hexo new [layout] 新建一篇文章。如果没有设置 layout 的话，默认使用 _config.yml 中的 default_layout 参数代替。如果标题包含空格的话，请使用引号括起来。 hexo generate–&gt;简写hexo g生成静态文件。 hexo publish [layout] 发表草稿。 hexo server启动服务器。默认情况下，访问网址为： http://localhost:4000/。 hexo deploy–&gt; 简写hexo d部署网站。 hexo clean清除缓存文件 (db.json) 和已生成的静态文件 (public)。在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。]]></content>
      <categories>
        <category>Notes</category>
      </categories>
      <tags>
        <tag>Blog</tag>
      </tags>
  </entry>
</search>
